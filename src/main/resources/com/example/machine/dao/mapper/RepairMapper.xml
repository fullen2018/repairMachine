<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.machine.dao.mapper.RepairMapper">
  <resultMap id="BaseResultMap" type="com.example.machine.model.RepairModel">
    <id column="repair_id" jdbcType="INTEGER" property="repairId" />
    <result column="staff_oper_id" jdbcType="INTEGER" property="staffOperId" />
    <result column="machine_id" jdbcType="INTEGER" property="machineId" />
    <result column="repair_time" jdbcType="TIMESTAMP" property="repairTime" />
    <result column="repair_descrp" jdbcType="VARCHAR" property="repairDescrp" />
    <result column="repair_cause" jdbcType="VARCHAR" property="repairCause" />
    <result column="repair_part" jdbcType="VARCHAR" property="repairPart" />
    <result column="repair_deal" jdbcType="INTEGER" property="repairDeal" />
    <result column="repair_status" jdbcType="INTEGER" property="repairStatus" />
    <result column="staff_repair_id" jdbcType="INTEGER" property="staffRepairId" />
    <result column="staffOperName" jdbcType="VARCHAR" property="staffOperName" />
    <result column="staffRepairName" jdbcType="VARCHAR" property="staffRepairName" />
    <association property="machine" javaType="com.example.machine.model.MachineModel">
        <id property="machineId" column="machine_id"></id>
        <result property="machineName" column="machine_name"></result>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    repair_id, staff_oper_id, repairTbale.machine_id, repair_time, repair_descrp, repair_cause, repair_part,
    repair_deal, repair_status, staff_repair_id,machine_name,oper.staff_name as staffOperName,
    staffRepair.staff_name as staffRepairName
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    `repair` as repairTbale
    LEFT JOIN staff AS oper ON oper.staff_id = repairTbale.staff_oper_id
    LEFT JOIN staff AS staffRepair ON staffRepair.staff_id = repairTbale.staff_repair_id
    LEFT JOIN machine ON machine.machine_id = repairTbale.machine_id
    where repair_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repair
    where repair_id = #{repairId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="repair_id" keyProperty="repairId" parameterType="com.example.machine.model.RepairModel" useGeneratedKeys="true">
    insert into repair (staff_oper_id, machine_id, repair_time, 
      repair_descrp, repair_cause, repair_part, 
      repair_deal, repair_status, staff_repair_id
      )
    values (#{staffOperId,jdbcType=INTEGER}, #{machineId,jdbcType=INTEGER}, #{repairTime,jdbcType=TIMESTAMP},
      #{repairDescrp,jdbcType=VARCHAR}, #{repairCause,jdbcType=VARCHAR}, #{repairPart,jdbcType=VARCHAR}, 
      #{repairDeal,jdbcType=INTEGER}, #{repairStatus,jdbcType=INTEGER}, #{staffRepairId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="repair_id" keyProperty="repairId" parameterType="com.example.machine.model.RepairModel" useGeneratedKeys="true">
    insert into repair
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="staffOperId != null">
        staff_oper_id,
      </if>
      <if test="machineId != null">
        machine_id,
      </if>
      <if test="repairTime != null">
        repair_time,
      </if>
      <if test="repairDescrp != null">
        repair_descrp,
      </if>
      <if test="repairCause != null">
        repair_cause,
      </if>
      <if test="repairPart != null">
        repair_part,
      </if>
      <if test="repairDeal != null">
        repair_deal,
      </if>
      <if test="repairStatus != null">
        repair_status,
      </if>
      <if test="staffRepairId != null">
        staff_repair_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="staffOperId != null">
        #{staffOperId,jdbcType=INTEGER},
      </if>
      <if test="machineId != null">
        #{machineId,jdbcType=INTEGER},
      </if>
      <if test="repairTime != null">
        #{repairTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repairDescrp != null">
        #{repairDescrp,jdbcType=VARCHAR},
      </if>
      <if test="repairCause != null">
        #{repairCause,jdbcType=VARCHAR},
      </if>
      <if test="repairPart != null">
        #{repairPart,jdbcType=VARCHAR},
      </if>
      <if test="repairDeal != null">
        #{repairDeal,jdbcType=INTEGER},
      </if>
      <if test="repairStatus != null">
        #{repairStatus,jdbcType=INTEGER},
      </if>
      <if test="staffRepairId != null">
        #{staffRepairId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.machine.model.RepairModel">
    update repair
    <set>
      <if test="staffOperId != null">
        staff_oper_id = #{staffOperId,jdbcType=INTEGER},
      </if>
      <if test="machineId != null">
        machine_id = #{machineId,jdbcType=INTEGER},
      </if>
      <if test="repairTime != null">
        repair_time = #{repairTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repairDescrp != null">
        repair_descrp = #{repairDescrp,jdbcType=VARCHAR},
      </if>
      <if test="repairCause != null">
        repair_cause = #{repairCause,jdbcType=VARCHAR},
      </if>
      <if test="repairPart != null">
        repair_part = #{repairPart,jdbcType=VARCHAR},
      </if>
      <if test="repairDeal != null">
        repair_deal = #{repairDeal,jdbcType=INTEGER},
      </if>
      <if test="repairStatus != null">
        repair_status = #{repairStatus,jdbcType=INTEGER},
      </if>
      <if test="staffRepairId != null">
        staff_repair_id = #{staffRepairId,jdbcType=INTEGER},
      </if>
    </set>
    where repair_id = #{repairId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.machine.model.RepairModel">
    update repair
    set staff_oper_id = #{staffOperId,jdbcType=INTEGER},
      machine_id = #{machineId,jdbcType=INTEGER},
      repair_time = #{repairTime,jdbcType=TIMESTAMP},
      repair_descrp = #{repairDescrp,jdbcType=VARCHAR},
      repair_cause = #{repairCause,jdbcType=VARCHAR},
      repair_part = #{repairPart,jdbcType=VARCHAR},
      repair_deal = #{repairDeal,jdbcType=INTEGER},
      repair_status = #{repairStatus,jdbcType=INTEGER},
      staff_repair_id = #{staffRepairId,jdbcType=INTEGER}
    where repair_id = #{repairId,jdbcType=INTEGER}
  </update>

  <!--供通用接口使用-->
  <!--根据条件查找数据条数-->
  <select id="queryAmount" resultType="long" >
    SELECT
    count(*)
    FROM
    `repair`
    <if test="conditions != null">
      where ${conditions}
    </if>
  </select>

  <!--根据条件查找数据-->
  <select id="queryByCondition" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    `repair` as repairTbale
    LEFT JOIN staff AS oper ON oper.staff_id = repairTbale.staff_oper_id
    LEFT JOIN staff AS staffRepair ON staffRepair.staff_id = repairTbale.staff_repair_id
    LEFT JOIN machine ON machine.machine_id = repairTbale.machine_id
    <if test="conditions != null">
      where ${conditions}
    </if>
    <if test="limit != -1 and limit != -1">
      limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </if>
  </select>

  <delete id="deletes" parameterType="Integer[]">
    delete from `repair` where repair_id in
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <!--维修统计-->
  <select id="statistics" resultType="com.example.machine.model.Statistics" >
     SELECT
	countTable.machine_id AS id,
	`count`,
	machine.machine_name AS `name`
   FROM
	(
		SELECT
			machine_id,
			COUNT(machine_id) AS count
		FROM
			`repair`
		GROUP BY
			(repair_id)
	) AS countTable,
	machine
   WHERE
	machine.machine_id = countTable.machine_id
  </select>
</mapper>